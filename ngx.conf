user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    charset   utf-8;
    #keepalive_timeout  65;
    #server_tokens       off;
    #sendfile            on;
    #tcp_nopush          on;
    #tcp_nodelay         off;
    client_max_body_size 20M;
    #post_max_size = 100M;
    #upload_max_filesize = 100M;


    upstream backend
        {
                #ip_hash;
                #least_conn;
                server x.x.x.x;
                server x.x.x.x;
        }
        #proxy_connect_timeout       300;
        #proxy_send_timeout      300;
        #proxy_read_timeout      300;
        #proxy_buffer_size       64k;
        #proxy_buffers           8 32k;
        #proxy_busy_buffers_size     64k;
        #proxy_temp_file_write_size  10m;
          #proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
          #proxy_temp_path   /var/cache/tmp;
          #proxy_cache_methods GET;
         # proxy_ignore_headers "Set-Cookie";
         # proxy_hide_header "Set-Cookie";
         # proxy_set_header 'Access-Control-Allow-Origin' '*';
         #proxy_set_header 'Access-Control-Allow-Credentials' 'true';
         #proxy_set_header 'Access-Control-Allow-Headers' 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept';
         #proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
          server
          {
                 listen   80;
                 listen [::]:80 ipv6only=on;
                 client_max_body_size    100M;
				  root /var/www/html/;
                 #index index.php index.html index.htm
                 server_name www.mgps.ca;
                 # adds gzip options
                 gzip on;
                gzip_types      text/css text/plain text/xml application/xml application/javascript application/x-javascript text/javascript application/json text/x-json;
                gzip_proxied    no-store no-cache private expired auth;
        #gzip_min_length 1000;
                gzip_disable "MSIE [1-6]\.";

                 #index          index.php;
                 location /.well-known
                 {
                            alias /var/www/html/.well-known;
                 }
                  #rewrite ^ https://$http_host$request_uri? permanent last;
                 location /
                 {
                        return 301 https://$server_name;
                 }

                 if ($scheme = http)
                 {
                   return 301 https://$server_name$request_uri;
                 }
          }
        server
        {
                 gzip on;
                 gzip_types      text/css text/plain text/xml application/xml application/javascript application/x-javascript text/javascript application/json text/x-json;
                 gzip_proxied    no-store no-cache private expired auth;
                # gzip_min_length 1000;
                 gzip_disable "MSIE [1-6]\.";

                        #listen 443 default_server ssl;
                        #listen [::]:443 http2 ssl;
                        listen 443;
                        listen [::]:443;
                        #listen 443 default_server ssl
                        #listen       443 ssl http2;
                        #listen       [::]:443 ssl http2;
                        server_name  www.mgps.ca;
                        ssl on;

                        ssl_certificate /etc/letsencrypt/live/www.mgps.ca/fullchain.pem;
                        ssl_certificate_key /etc/letsencrypt/live/www.mgps.ca/privkey.pem;
                        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                        ssl_prefer_server_ciphers on;
                       # ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

						ssl_ciphers 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
                        ssl_ecdh_curve secp384r1;
                        ssl_session_cache shared:SSL:10m;
                        ssl_session_tickets off;
                        ssl_stapling on;
                        ssl_stapling_verify on;
                        resolver 8.8.8.8 8.8.4.4 valid=300s;
                        resolver_timeout 5s;
                        # Disable preloading HSTS for now.  You can use the commented out header line that includes
                        # the "preload" directive if you understand the implications.
                        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
                        # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
                        add_header X-Frame-Options DENY;
                        add_header X-Content-Type-Options nosniff;
                        #ssl_dhparam /etc/ssl/certs/dhparam.pem;
                        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";
                        location /.well-known
                        {
                                  alias /var/www/html/.well-known;
                        }
                         root         /var/www/html;
                         # the "preload" directive if you understand the implications.
                           #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
                         include             /etc/nginx/mime.types;
                          location /
                         {
                                gzip_static on;
                                proxy_set_header 'Access-Control-Allow-Origin' '*';
                                proxy_set_header 'Access-Control-Allow-Credentials' 'true';
                                proxy_set_header 'Access-Control-Allow-Headers' 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept';
                                proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                                proxy_pass      http://backend$request_uri;
                                proxy_set_header        X-Real-IP $remote_addr;
                                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                                #proxy_set_header        Host $http_host;
                                proxy_set_header  Host $host;
                                proxy_set_header X-FORWARDED-PROTO $scheme;
                                #proxy_set_header X-Forwarded-Proto $scheme;
                                proxy_read_timeout      90;
                         }
                         location /nginx_status
                         {
                                 stub_status on;
                                 access_log   off;
                                 allow 10.50.2.25;
                                 deny all;
                         }
